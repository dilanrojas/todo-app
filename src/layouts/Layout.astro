---
interface Props {
	title: string;
}

const theme = Astro.cookies.get("theme")?.value;
const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class={theme}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&display=swap');

	:root {
		--theme-transition: background-color .12s ease-in-out;

		--bg-checkbox: linear-gradient(120deg, hsl(192, 100%, 67%), hsl(280, 87%, 65%));
		--accent-100: hsl(220, 98%, 61%);

		--gray-100: hsl(0, 0%, 98%);
		--gray-200: hsl(236, 33%, 92%);
		--gray-300: hsl(233, 11%, 84%);
		--gray-400: hsl(236, 9%, 61%);
		--gray-500: hsl(235, 19%, 35%);

		--blue-100: hsl(234, 39%, 85%);
		--blue-200: hsl(236, 33%, 92%);
		--blue-300: hsl(234, 11%, 52%);
		--blue-400: hsl(233, 14%, 35%);
		--blue-500: hsl(237, 14%, 26%);
		--blue-600: hsl(235, 24%, 19%);
		--blue-700: hsl(235, 21%, 11%);

		/* Light scheme */
		--lm-bg-body: var(--var-100);
		--lm-bg-primary: var(--gray-100);
		--lm-text: var(--blue-500);
		--lm-text-secondary: var(--blue-300);
		--lm-text-heading: var(--gray-100);
		--lm-text-checked: var(--gray-300);
		--lm-line: var(--gray-200);

		/* Dark scheme */
		--dm-bg-body: var(--blue-700);
		--dm-bg-primary: var(--blue-600);
		--dm-text: var(--gray-200);
		--dm-text-secondary: var(--blue-300);
		--dm-text-heading: var(--gray-100);
		--dm-text-checked: var(--gray-500);
		--dm-line: var(--blue-500);

		/* Current scheme */
		--bg-body: var(--lm-bg-body);
		--bg-primary: var(--lm-bg-primary);
		--text: var(--lm-text);
		--text-secondary: var(--lm-text-secondary);
		--text-heading: var(--lm-text-heading);
		--text-checked: var(--lm-text-checked);
		--line: var(--lm-line);
		color-scheme: light;

		--ff-html: "Josefin Sans", sans-serif;
	}

	@media (prefers-color-scheme: dark) {
		:root {
			--bg-body: var(--dm-bg-body);
			--bg-primary: var(--dm-bg-primary);
			--text: var(--dm-text);
			--text-secondary: var(--dm-text-secondary);
			--text-heading: var(--dm-text-heading);
			--text-checked: var(--dm-text-checked);
			--line: var(--dm-line);
			color-scheme: dark;
		}
	}

	html.dark {
		--bg-body: var(--dm-bg-body);
		--bg-primary: var(--dm-bg-primary);
		--text: var(--dm-text);
		--text-secondary: var(--dm-text-secondary);
		--text-heading: var(--dm-text-heading);
		--text-checked: var(--dm-text-checked);
		--line: var(--dm-line);
		color-scheme: dark;
	}

	html.light {
		--bg-body: var(--lm-bg-body);
		--bg-primary: var(--lm-bg-primary);
		--text: var(--lm-text);
		--text-secondary: var(--lm-text-secondary);
		--text-heading: var(--lm-text-heading);
		--text-checked: var(--lm-text-checked);
		--line: var(--lm-line);
		color-scheme: light;
	}

	html {
		font-family: var(--ff-html);
		font-size: 18px;
		color: var(--text);
		line-height: 1.25;
	}

	body {
		background-color: var(--bg-body);
		display: grid;
		min-height: 100dvh;
		transition: var(--theme-transition);
	}

	ul, ol {
		list-style: none;
	}

	@keyframes zoomIn {
		from { scale: 0 }
		to { scale: 1 }
	}

	@keyframes slideIn {
		0% { transform: translateX(-50px); opacity: 0 }
		100% { transform: translateX(0px); opacity: 1 }
	}

	@keyframes slideOut {
		0% { transform: translateX(0px); opacity: 1 }
		100% { transform: translateX(50px); opacity: 0 }
	}

	* {
		margin: 0;
		padding: 0;
	}

	*, *::before, *::after {
		box-sizing: border-box;
	}

	input, textarea, button {
		font-size: inherit;
		font-family: inherit;
		color: currentColor;
		background-color: transparent;
	}

	h1, h2, h3, h4, h5, h6 {
		line-height: 1;
	}

	button {
		cursor: pointer;
		border: 0;
	}

	input {
		outline: 0;
		border: 0;
	}

	input:focus {
		outline: 0;
		border: 0;
	}

	hr {
		border: 0;
		border-top: 1px solid var(--text-checked);
	}

	/* Utility classes */
	.container {
		--width: 30em;
		--padding: 1rem;

		width: min(var(--width), 100% - (var(--padding) * 2));
		margin-inline: auto;
	}

  [aria-hidden] {
    display: none;
  }

	.removing {
		animation: slideOut .15s forwards
	}

	.dragging {
		opacity: .4;
	}
</style>
